//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IdemMedina.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SAM_DBEntities : DbContext
    {
        public SAM_DBEntities()
            : base("name=SAM_DBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<CardType> CardTypes { get; set; }
        public virtual DbSet<CardValidity> CardValidities { get; set; }
        public virtual DbSet<Function> Functions { get; set; }
        public virtual DbSet<Group> Groups { get; set; }
        public virtual DbSet<GroupFunction> GroupFunctions { get; set; }
        public virtual DbSet<RejectReason> RejectReasons { get; set; }
        public virtual DbSet<RequestClass> RequestClasses { get; set; }
        public virtual DbSet<RequestPriority> RequestPriorities { get; set; }
        public virtual DbSet<RequestStatu> RequestStatus { get; set; }
        public virtual DbSet<RequestType> RequestTypes { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<UserGroup> UserGroups { get; set; }
        public virtual DbSet<WorkField> WorkFields { get; set; }
        public virtual DbSet<Customer> Customers { get; set; }
        public virtual DbSet<Request> Requests { get; set; }
        public virtual DbSet<RequestDetail> RequestDetails { get; set; }
    
        public virtual int DeleteCardType(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteCardType", idParameter);
        }
    
        public virtual int DeleteCardValidity(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteCardValidity", idParameter);
        }
    
        public virtual int DeleteFunction(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteFunction", idParameter);
        }
    
        public virtual int DeleteGroup(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteGroup", idParameter);
        }
    
        public virtual int DeleteGroupFunction(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteGroupFunction", idParameter);
        }
    
        public virtual int DeleteRejectReason(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteRejectReason", idParameter);
        }
    
        public virtual int DeleteRequestClass(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteRequestClass", idParameter);
        }
    
        public virtual int DeleteRequestPriority(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteRequestPriority", idParameter);
        }
    
        public virtual int DeleteRequestStatus(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteRequestStatus", idParameter);
        }
    
        public virtual int DeleteRequestType(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteRequestType", idParameter);
        }
    
        public virtual int DeleteUser(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteUser", idParameter);
        }
    
        public virtual int DeleteUserGroup(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteUserGroup", idParameter);
        }
    
        public virtual int DeleteWorkField(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteWorkField", idParameter);
        }
    
        public virtual int InsertCardType(ObjectParameter id, string name, string nameAr)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var nameArParameter = nameAr != null ?
                new ObjectParameter("nameAr", nameAr) :
                new ObjectParameter("nameAr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertCardType", id, nameParameter, nameArParameter);
        }
    
        public virtual int InsertCardValidity(ObjectParameter id, string name, string nameAr)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var nameArParameter = nameAr != null ?
                new ObjectParameter("nameAr", nameAr) :
                new ObjectParameter("nameAr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertCardValidity", id, nameParameter, nameArParameter);
        }
    
        public virtual int InsertFunction(ObjectParameter id, string name, string nameAr, string route, Nullable<bool> status)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var nameArParameter = nameAr != null ?
                new ObjectParameter("nameAr", nameAr) :
                new ObjectParameter("nameAr", typeof(string));
    
            var routeParameter = route != null ?
                new ObjectParameter("route", route) :
                new ObjectParameter("route", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertFunction", id, nameParameter, nameArParameter, routeParameter, statusParameter);
        }
    
        public virtual int InsertGroup(ObjectParameter id, string name, Nullable<bool> status)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertGroup", id, nameParameter, statusParameter);
        }
    
        public virtual int InsertGroupFunction(ObjectParameter id, Nullable<int> functionId, Nullable<int> groupId, Nullable<bool> status)
        {
            var functionIdParameter = functionId.HasValue ?
                new ObjectParameter("functionId", functionId) :
                new ObjectParameter("functionId", typeof(int));
    
            var groupIdParameter = groupId.HasValue ?
                new ObjectParameter("groupId", groupId) :
                new ObjectParameter("groupId", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertGroupFunction", id, functionIdParameter, groupIdParameter, statusParameter);
        }
    
        public virtual int InsertRejectReason(ObjectParameter id, string name, string nameAr)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var nameArParameter = nameAr != null ?
                new ObjectParameter("nameAr", nameAr) :
                new ObjectParameter("nameAr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertRejectReason", id, nameParameter, nameArParameter);
        }
    
        public virtual int InsertRequestClass(ObjectParameter id, string name, string nameAr)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var nameArParameter = nameAr != null ?
                new ObjectParameter("nameAr", nameAr) :
                new ObjectParameter("nameAr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertRequestClass", id, nameParameter, nameArParameter);
        }
    
        public virtual int InsertRequestPriority(ObjectParameter id, string name, string nameAr)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var nameArParameter = nameAr != null ?
                new ObjectParameter("nameAr", nameAr) :
                new ObjectParameter("nameAr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertRequestPriority", id, nameParameter, nameArParameter);
        }
    
        public virtual int InsertRequestStatus(ObjectParameter id, string name, string nameAr)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var nameArParameter = nameAr != null ?
                new ObjectParameter("nameAr", nameAr) :
                new ObjectParameter("nameAr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertRequestStatus", id, nameParameter, nameArParameter);
        }
    
        public virtual int InsertRequestType(ObjectParameter id, string name, string nameAr)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var nameArParameter = nameAr != null ?
                new ObjectParameter("nameAr", nameAr) :
                new ObjectParameter("nameAr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertRequestType", id, nameParameter, nameArParameter);
        }
    
        public virtual int InsertUser(ObjectParameter id, string userName, string fullName, string password, Nullable<bool> status, Nullable<System.DateTime> createDate)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("userName", userName) :
                new ObjectParameter("userName", typeof(string));
    
            var fullNameParameter = fullName != null ?
                new ObjectParameter("fullName", fullName) :
                new ObjectParameter("fullName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(bool));
    
            var createDateParameter = createDate.HasValue ?
                new ObjectParameter("createDate", createDate) :
                new ObjectParameter("createDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertUser", id, userNameParameter, fullNameParameter, passwordParameter, statusParameter, createDateParameter);
        }
    
        public virtual int InsertUserGroup(ObjectParameter id, Nullable<int> userId, Nullable<int> groupId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            var groupIdParameter = groupId.HasValue ?
                new ObjectParameter("groupId", groupId) :
                new ObjectParameter("groupId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertUserGroup", id, userIdParameter, groupIdParameter);
        }
    
        public virtual int InsertWorkField(ObjectParameter id, string name, string nameAr)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var nameArParameter = nameAr != null ?
                new ObjectParameter("nameAr", nameAr) :
                new ObjectParameter("nameAr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertWorkField", id, nameParameter, nameArParameter);
        }
    
        public virtual ObjectResult<SelectCardType_Result> SelectCardType(Nullable<int> id, string name, string nameAr)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var nameArParameter = nameAr != null ?
                new ObjectParameter("nameAr", nameAr) :
                new ObjectParameter("nameAr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectCardType_Result>("SelectCardType", idParameter, nameParameter, nameArParameter);
        }
    
        public virtual ObjectResult<SelectCardValidity_Result> SelectCardValidity(Nullable<int> id, string name, string nameAr)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var nameArParameter = nameAr != null ?
                new ObjectParameter("nameAr", nameAr) :
                new ObjectParameter("nameAr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectCardValidity_Result>("SelectCardValidity", idParameter, nameParameter, nameArParameter);
        }
    
        public virtual ObjectResult<SelectFunction_Result> SelectFunction(Nullable<int> id, string name, string nameAr)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var nameArParameter = nameAr != null ?
                new ObjectParameter("nameAr", nameAr) :
                new ObjectParameter("nameAr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectFunction_Result>("SelectFunction", idParameter, nameParameter, nameArParameter);
        }
    
        public virtual ObjectResult<SelectGroup_Result> SelectGroup(Nullable<int> id, string name)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectGroup_Result>("SelectGroup", idParameter, nameParameter);
        }
    
        public virtual ObjectResult<SelectGroupFunction_Result> SelectGroupFunction(Nullable<int> id, Nullable<int> functionId, Nullable<int> groupId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var functionIdParameter = functionId.HasValue ?
                new ObjectParameter("functionId", functionId) :
                new ObjectParameter("functionId", typeof(int));
    
            var groupIdParameter = groupId.HasValue ?
                new ObjectParameter("groupId", groupId) :
                new ObjectParameter("groupId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectGroupFunction_Result>("SelectGroupFunction", idParameter, functionIdParameter, groupIdParameter);
        }
    
        public virtual ObjectResult<SelectRejectReason_Result> SelectRejectReason(Nullable<int> id, string name, string nameAr)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var nameArParameter = nameAr != null ?
                new ObjectParameter("nameAr", nameAr) :
                new ObjectParameter("nameAr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectRejectReason_Result>("SelectRejectReason", idParameter, nameParameter, nameArParameter);
        }
    
        public virtual ObjectResult<SelectRequestClass_Result> SelectRequestClass(Nullable<int> id, string name, string nameAr)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var nameArParameter = nameAr != null ?
                new ObjectParameter("nameAr", nameAr) :
                new ObjectParameter("nameAr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectRequestClass_Result>("SelectRequestClass", idParameter, nameParameter, nameArParameter);
        }
    
        public virtual ObjectResult<SelectRequestPriority_Result> SelectRequestPriority(Nullable<int> id, string name, string nameAr)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var nameArParameter = nameAr != null ?
                new ObjectParameter("nameAr", nameAr) :
                new ObjectParameter("nameAr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectRequestPriority_Result>("SelectRequestPriority", idParameter, nameParameter, nameArParameter);
        }
    
        public virtual ObjectResult<SelectRequestStatus_Result> SelectRequestStatus(Nullable<int> id, string name, string nameAr)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var nameArParameter = nameAr != null ?
                new ObjectParameter("nameAr", nameAr) :
                new ObjectParameter("nameAr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectRequestStatus_Result>("SelectRequestStatus", idParameter, nameParameter, nameArParameter);
        }
    
        public virtual ObjectResult<SelectRequestType_Result> SelectRequestType(Nullable<int> id, string name, string nameAr)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var nameArParameter = nameAr != null ?
                new ObjectParameter("nameAr", nameAr) :
                new ObjectParameter("nameAr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectRequestType_Result>("SelectRequestType", idParameter, nameParameter, nameArParameter);
        }
    
        public virtual ObjectResult<SelectUser_Result> SelectUser(Nullable<int> id, string userName, string fullName, Nullable<System.DateTime> createDate)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("userName", userName) :
                new ObjectParameter("userName", typeof(string));
    
            var fullNameParameter = fullName != null ?
                new ObjectParameter("fullName", fullName) :
                new ObjectParameter("fullName", typeof(string));
    
            var createDateParameter = createDate.HasValue ?
                new ObjectParameter("createDate", createDate) :
                new ObjectParameter("createDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectUser_Result>("SelectUser", idParameter, userNameParameter, fullNameParameter, createDateParameter);
        }
    
        public virtual ObjectResult<SelectUserGroup_Result> SelectUserGroup(Nullable<int> id, Nullable<int> userId, Nullable<int> groupId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            var groupIdParameter = groupId.HasValue ?
                new ObjectParameter("groupId", groupId) :
                new ObjectParameter("groupId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectUserGroup_Result>("SelectUserGroup", idParameter, userIdParameter, groupIdParameter);
        }
    
        public virtual ObjectResult<SelectWorkField_Result> SelectWorkField(Nullable<int> id, string name, string nameAr)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var nameArParameter = nameAr != null ?
                new ObjectParameter("nameAr", nameAr) :
                new ObjectParameter("nameAr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectWorkField_Result>("SelectWorkField", idParameter, nameParameter, nameArParameter);
        }
    
        public virtual int UpdateCardType(Nullable<int> id, string name, string nameAr)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var nameArParameter = nameAr != null ?
                new ObjectParameter("nameAr", nameAr) :
                new ObjectParameter("nameAr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateCardType", idParameter, nameParameter, nameArParameter);
        }
    
        public virtual int UpdateCardValidity(Nullable<int> id, string name, string nameAr)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var nameArParameter = nameAr != null ?
                new ObjectParameter("nameAr", nameAr) :
                new ObjectParameter("nameAr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateCardValidity", idParameter, nameParameter, nameArParameter);
        }
    
        public virtual int UpdateFunction(Nullable<int> id, string name, string nameAr, string route, Nullable<bool> status)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var nameArParameter = nameAr != null ?
                new ObjectParameter("nameAr", nameAr) :
                new ObjectParameter("nameAr", typeof(string));
    
            var routeParameter = route != null ?
                new ObjectParameter("route", route) :
                new ObjectParameter("route", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateFunction", idParameter, nameParameter, nameArParameter, routeParameter, statusParameter);
        }
    
        public virtual int UpdateGroup(Nullable<int> id, string name, Nullable<bool> status)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateGroup", idParameter, nameParameter, statusParameter);
        }
    
        public virtual int UpdateGroupFunction(Nullable<int> id, Nullable<int> functionId, Nullable<int> groupId, Nullable<bool> status)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var functionIdParameter = functionId.HasValue ?
                new ObjectParameter("functionId", functionId) :
                new ObjectParameter("functionId", typeof(int));
    
            var groupIdParameter = groupId.HasValue ?
                new ObjectParameter("groupId", groupId) :
                new ObjectParameter("groupId", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateGroupFunction", idParameter, functionIdParameter, groupIdParameter, statusParameter);
        }
    
        public virtual int UpdateRejectReason(Nullable<int> id, string name, string nameAr)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var nameArParameter = nameAr != null ?
                new ObjectParameter("nameAr", nameAr) :
                new ObjectParameter("nameAr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateRejectReason", idParameter, nameParameter, nameArParameter);
        }
    
        public virtual int UpdateRequestClass(Nullable<int> id, string name, string nameAr)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var nameArParameter = nameAr != null ?
                new ObjectParameter("nameAr", nameAr) :
                new ObjectParameter("nameAr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateRequestClass", idParameter, nameParameter, nameArParameter);
        }
    
        public virtual int UpdateRequestPriority(Nullable<int> id, string name, string nameAr)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var nameArParameter = nameAr != null ?
                new ObjectParameter("nameAr", nameAr) :
                new ObjectParameter("nameAr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateRequestPriority", idParameter, nameParameter, nameArParameter);
        }
    
        public virtual int UpdateRequestStatus(Nullable<int> id, string name, string nameAr)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var nameArParameter = nameAr != null ?
                new ObjectParameter("nameAr", nameAr) :
                new ObjectParameter("nameAr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateRequestStatus", idParameter, nameParameter, nameArParameter);
        }
    
        public virtual int UpdateRequestType(Nullable<int> id, string name, string nameAr)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var nameArParameter = nameAr != null ?
                new ObjectParameter("nameAr", nameAr) :
                new ObjectParameter("nameAr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateRequestType", idParameter, nameParameter, nameArParameter);
        }
    
        public virtual int UpdateUser(Nullable<int> id, string userName, string fullName, string password, Nullable<bool> status, Nullable<System.DateTime> createDate)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("userName", userName) :
                new ObjectParameter("userName", typeof(string));
    
            var fullNameParameter = fullName != null ?
                new ObjectParameter("fullName", fullName) :
                new ObjectParameter("fullName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(bool));
    
            var createDateParameter = createDate.HasValue ?
                new ObjectParameter("createDate", createDate) :
                new ObjectParameter("createDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateUser", idParameter, userNameParameter, fullNameParameter, passwordParameter, statusParameter, createDateParameter);
        }
    
        public virtual int UpdateUserGroup(Nullable<int> id, Nullable<int> userId, Nullable<int> groupId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            var groupIdParameter = groupId.HasValue ?
                new ObjectParameter("groupId", groupId) :
                new ObjectParameter("groupId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateUserGroup", idParameter, userIdParameter, groupIdParameter);
        }
    
        public virtual int UpdateWorkField(Nullable<int> id, string name, string nameAr)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var nameArParameter = nameAr != null ?
                new ObjectParameter("nameAr", nameAr) :
                new ObjectParameter("nameAr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateWorkField", idParameter, nameParameter, nameArParameter);
        }
    
        public virtual int DeleteCustomer(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteCustomer", idParameter);
        }
    
        public virtual int DeleteRequest(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteRequest", idParameter);
        }
    
        public virtual int DeleteRequestDetail(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteRequestDetail", idParameter);
        }
    
        public virtual int InsertCustomer(ObjectParameter id, string code, string name, string nameAr, string address, string phone, string email, Nullable<int> workFieldId)
        {
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var nameArParameter = nameAr != null ?
                new ObjectParameter("nameAr", nameAr) :
                new ObjectParameter("nameAr", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var workFieldIdParameter = workFieldId.HasValue ?
                new ObjectParameter("workFieldId", workFieldId) :
                new ObjectParameter("workFieldId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertCustomer", id, codeParameter, nameParameter, nameArParameter, addressParameter, phoneParameter, emailParameter, workFieldIdParameter);
        }
    
        public virtual int InsertRequest(ObjectParameter id, string requestNumber, Nullable<int> totalQuantity, Nullable<System.DateTime> pDD, Nullable<int> customerID, Nullable<System.DateTime> creationDate, Nullable<int> creationUserID, Nullable<System.DateTime> approvalDate, Nullable<int> approvalUserID, Nullable<System.DateTime> receiveDate, Nullable<int> receiveUserID, Nullable<System.DateTime> rejectionDate, Nullable<int> rejectionUserID, Nullable<int> rejectionReasonID, Nullable<int> requestTypeID, Nullable<int> requestStatusID, Nullable<int> requestCalssID, Nullable<int> requestPriorityID)
        {
            var requestNumberParameter = requestNumber != null ?
                new ObjectParameter("requestNumber", requestNumber) :
                new ObjectParameter("requestNumber", typeof(string));
    
            var totalQuantityParameter = totalQuantity.HasValue ?
                new ObjectParameter("totalQuantity", totalQuantity) :
                new ObjectParameter("totalQuantity", typeof(int));
    
            var pDDParameter = pDD.HasValue ?
                new ObjectParameter("PDD", pDD) :
                new ObjectParameter("PDD", typeof(System.DateTime));
    
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("customerID", customerID) :
                new ObjectParameter("customerID", typeof(int));
    
            var creationDateParameter = creationDate.HasValue ?
                new ObjectParameter("creationDate", creationDate) :
                new ObjectParameter("creationDate", typeof(System.DateTime));
    
            var creationUserIDParameter = creationUserID.HasValue ?
                new ObjectParameter("creationUserID", creationUserID) :
                new ObjectParameter("creationUserID", typeof(int));
    
            var approvalDateParameter = approvalDate.HasValue ?
                new ObjectParameter("approvalDate", approvalDate) :
                new ObjectParameter("approvalDate", typeof(System.DateTime));
    
            var approvalUserIDParameter = approvalUserID.HasValue ?
                new ObjectParameter("approvalUserID", approvalUserID) :
                new ObjectParameter("approvalUserID", typeof(int));
    
            var receiveDateParameter = receiveDate.HasValue ?
                new ObjectParameter("receiveDate", receiveDate) :
                new ObjectParameter("receiveDate", typeof(System.DateTime));
    
            var receiveUserIDParameter = receiveUserID.HasValue ?
                new ObjectParameter("receiveUserID", receiveUserID) :
                new ObjectParameter("receiveUserID", typeof(int));
    
            var rejectionDateParameter = rejectionDate.HasValue ?
                new ObjectParameter("rejectionDate", rejectionDate) :
                new ObjectParameter("rejectionDate", typeof(System.DateTime));
    
            var rejectionUserIDParameter = rejectionUserID.HasValue ?
                new ObjectParameter("rejectionUserID", rejectionUserID) :
                new ObjectParameter("rejectionUserID", typeof(int));
    
            var rejectionReasonIDParameter = rejectionReasonID.HasValue ?
                new ObjectParameter("rejectionReasonID", rejectionReasonID) :
                new ObjectParameter("rejectionReasonID", typeof(int));
    
            var requestTypeIDParameter = requestTypeID.HasValue ?
                new ObjectParameter("requestTypeID", requestTypeID) :
                new ObjectParameter("requestTypeID", typeof(int));
    
            var requestStatusIDParameter = requestStatusID.HasValue ?
                new ObjectParameter("requestStatusID", requestStatusID) :
                new ObjectParameter("requestStatusID", typeof(int));
    
            var requestCalssIDParameter = requestCalssID.HasValue ?
                new ObjectParameter("requestCalssID", requestCalssID) :
                new ObjectParameter("requestCalssID", typeof(int));
    
            var requestPriorityIDParameter = requestPriorityID.HasValue ?
                new ObjectParameter("requestPriorityID", requestPriorityID) :
                new ObjectParameter("requestPriorityID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertRequest", id, requestNumberParameter, totalQuantityParameter, pDDParameter, customerIDParameter, creationDateParameter, creationUserIDParameter, approvalDateParameter, approvalUserIDParameter, receiveDateParameter, receiveUserIDParameter, rejectionDateParameter, rejectionUserIDParameter, rejectionReasonIDParameter, requestTypeIDParameter, requestStatusIDParameter, requestCalssIDParameter, requestPriorityIDParameter);
        }
    
        public virtual int InsertRequestDetail(ObjectParameter id, Nullable<int> quantity, Nullable<int> cardTypeID, Nullable<int> requestID)
        {
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("quantity", quantity) :
                new ObjectParameter("quantity", typeof(int));
    
            var cardTypeIDParameter = cardTypeID.HasValue ?
                new ObjectParameter("cardTypeID", cardTypeID) :
                new ObjectParameter("cardTypeID", typeof(int));
    
            var requestIDParameter = requestID.HasValue ?
                new ObjectParameter("requestID", requestID) :
                new ObjectParameter("requestID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertRequestDetail", id, quantityParameter, cardTypeIDParameter, requestIDParameter);
        }
    
        public virtual ObjectResult<SelectCustomer_Result> SelectCustomer(Nullable<int> id, string code, string name, string nameAr, Nullable<int> workFieldId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var nameArParameter = nameAr != null ?
                new ObjectParameter("nameAr", nameAr) :
                new ObjectParameter("nameAr", typeof(string));
    
            var workFieldIdParameter = workFieldId.HasValue ?
                new ObjectParameter("workFieldId", workFieldId) :
                new ObjectParameter("workFieldId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectCustomer_Result>("SelectCustomer", idParameter, codeParameter, nameParameter, nameArParameter, workFieldIdParameter);
        }
    
        public virtual ObjectResult<SelectRequest_Result> SelectRequest(Nullable<int> id, string requestNumber, Nullable<int> customerID, Nullable<System.DateTime> creationDate, Nullable<int> creationUserID, Nullable<System.DateTime> approvalDate, Nullable<int> approvalUserID, Nullable<System.DateTime> receiveDate, Nullable<int> receiveUserID, Nullable<System.DateTime> rejectionDate, Nullable<int> rejectionUserID, Nullable<int> rejectionReasonID, Nullable<int> requestTypeID, Nullable<int> requestStatusID, Nullable<int> requestCalssID, Nullable<int> requestPriorityID)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var requestNumberParameter = requestNumber != null ?
                new ObjectParameter("requestNumber", requestNumber) :
                new ObjectParameter("requestNumber", typeof(string));
    
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("customerID", customerID) :
                new ObjectParameter("customerID", typeof(int));
    
            var creationDateParameter = creationDate.HasValue ?
                new ObjectParameter("creationDate", creationDate) :
                new ObjectParameter("creationDate", typeof(System.DateTime));
    
            var creationUserIDParameter = creationUserID.HasValue ?
                new ObjectParameter("creationUserID", creationUserID) :
                new ObjectParameter("creationUserID", typeof(int));
    
            var approvalDateParameter = approvalDate.HasValue ?
                new ObjectParameter("approvalDate", approvalDate) :
                new ObjectParameter("approvalDate", typeof(System.DateTime));
    
            var approvalUserIDParameter = approvalUserID.HasValue ?
                new ObjectParameter("approvalUserID", approvalUserID) :
                new ObjectParameter("approvalUserID", typeof(int));
    
            var receiveDateParameter = receiveDate.HasValue ?
                new ObjectParameter("receiveDate", receiveDate) :
                new ObjectParameter("receiveDate", typeof(System.DateTime));
    
            var receiveUserIDParameter = receiveUserID.HasValue ?
                new ObjectParameter("receiveUserID", receiveUserID) :
                new ObjectParameter("receiveUserID", typeof(int));
    
            var rejectionDateParameter = rejectionDate.HasValue ?
                new ObjectParameter("rejectionDate", rejectionDate) :
                new ObjectParameter("rejectionDate", typeof(System.DateTime));
    
            var rejectionUserIDParameter = rejectionUserID.HasValue ?
                new ObjectParameter("rejectionUserID", rejectionUserID) :
                new ObjectParameter("rejectionUserID", typeof(int));
    
            var rejectionReasonIDParameter = rejectionReasonID.HasValue ?
                new ObjectParameter("rejectionReasonID", rejectionReasonID) :
                new ObjectParameter("rejectionReasonID", typeof(int));
    
            var requestTypeIDParameter = requestTypeID.HasValue ?
                new ObjectParameter("requestTypeID", requestTypeID) :
                new ObjectParameter("requestTypeID", typeof(int));
    
            var requestStatusIDParameter = requestStatusID.HasValue ?
                new ObjectParameter("requestStatusID", requestStatusID) :
                new ObjectParameter("requestStatusID", typeof(int));
    
            var requestCalssIDParameter = requestCalssID.HasValue ?
                new ObjectParameter("requestCalssID", requestCalssID) :
                new ObjectParameter("requestCalssID", typeof(int));
    
            var requestPriorityIDParameter = requestPriorityID.HasValue ?
                new ObjectParameter("requestPriorityID", requestPriorityID) :
                new ObjectParameter("requestPriorityID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectRequest_Result>("SelectRequest", idParameter, requestNumberParameter, customerIDParameter, creationDateParameter, creationUserIDParameter, approvalDateParameter, approvalUserIDParameter, receiveDateParameter, receiveUserIDParameter, rejectionDateParameter, rejectionUserIDParameter, rejectionReasonIDParameter, requestTypeIDParameter, requestStatusIDParameter, requestCalssIDParameter, requestPriorityIDParameter);
        }
    
        public virtual ObjectResult<SelectRequestDetail_Result> SelectRequestDetail(Nullable<int> id, Nullable<int> cardTypeID, Nullable<int> requestID)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var cardTypeIDParameter = cardTypeID.HasValue ?
                new ObjectParameter("cardTypeID", cardTypeID) :
                new ObjectParameter("cardTypeID", typeof(int));
    
            var requestIDParameter = requestID.HasValue ?
                new ObjectParameter("requestID", requestID) :
                new ObjectParameter("requestID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectRequestDetail_Result>("SelectRequestDetail", idParameter, cardTypeIDParameter, requestIDParameter);
        }
    
        public virtual int UpdateCustomer(Nullable<int> id, string code, string name, string nameAr, string address, string phone, string email, Nullable<int> workFieldId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var nameArParameter = nameAr != null ?
                new ObjectParameter("nameAr", nameAr) :
                new ObjectParameter("nameAr", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("phone", phone) :
                new ObjectParameter("phone", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var workFieldIdParameter = workFieldId.HasValue ?
                new ObjectParameter("workFieldId", workFieldId) :
                new ObjectParameter("workFieldId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateCustomer", idParameter, codeParameter, nameParameter, nameArParameter, addressParameter, phoneParameter, emailParameter, workFieldIdParameter);
        }
    
        public virtual int UpdateRequest(Nullable<int> id, string requestNumber, Nullable<int> totalQuantity, Nullable<System.DateTime> pDD, Nullable<int> customerID, Nullable<System.DateTime> creationDate, Nullable<int> creationUserID, Nullable<System.DateTime> approvalDate, Nullable<int> approvalUserID, Nullable<System.DateTime> receiveDate, Nullable<int> receiveUserID, Nullable<System.DateTime> rejectionDate, Nullable<int> rejectionUserID, Nullable<int> rejectionReasonID, Nullable<int> requestTypeID, Nullable<int> requestStatusID, Nullable<int> requestCalssID, Nullable<int> requestPriorityID)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var requestNumberParameter = requestNumber != null ?
                new ObjectParameter("requestNumber", requestNumber) :
                new ObjectParameter("requestNumber", typeof(string));
    
            var totalQuantityParameter = totalQuantity.HasValue ?
                new ObjectParameter("totalQuantity", totalQuantity) :
                new ObjectParameter("totalQuantity", typeof(int));
    
            var pDDParameter = pDD.HasValue ?
                new ObjectParameter("PDD", pDD) :
                new ObjectParameter("PDD", typeof(System.DateTime));
    
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("customerID", customerID) :
                new ObjectParameter("customerID", typeof(int));
    
            var creationDateParameter = creationDate.HasValue ?
                new ObjectParameter("creationDate", creationDate) :
                new ObjectParameter("creationDate", typeof(System.DateTime));
    
            var creationUserIDParameter = creationUserID.HasValue ?
                new ObjectParameter("creationUserID", creationUserID) :
                new ObjectParameter("creationUserID", typeof(int));
    
            var approvalDateParameter = approvalDate.HasValue ?
                new ObjectParameter("approvalDate", approvalDate) :
                new ObjectParameter("approvalDate", typeof(System.DateTime));
    
            var approvalUserIDParameter = approvalUserID.HasValue ?
                new ObjectParameter("approvalUserID", approvalUserID) :
                new ObjectParameter("approvalUserID", typeof(int));
    
            var receiveDateParameter = receiveDate.HasValue ?
                new ObjectParameter("receiveDate", receiveDate) :
                new ObjectParameter("receiveDate", typeof(System.DateTime));
    
            var receiveUserIDParameter = receiveUserID.HasValue ?
                new ObjectParameter("receiveUserID", receiveUserID) :
                new ObjectParameter("receiveUserID", typeof(int));
    
            var rejectionDateParameter = rejectionDate.HasValue ?
                new ObjectParameter("rejectionDate", rejectionDate) :
                new ObjectParameter("rejectionDate", typeof(System.DateTime));
    
            var rejectionUserIDParameter = rejectionUserID.HasValue ?
                new ObjectParameter("rejectionUserID", rejectionUserID) :
                new ObjectParameter("rejectionUserID", typeof(int));
    
            var rejectionReasonIDParameter = rejectionReasonID.HasValue ?
                new ObjectParameter("rejectionReasonID", rejectionReasonID) :
                new ObjectParameter("rejectionReasonID", typeof(int));
    
            var requestTypeIDParameter = requestTypeID.HasValue ?
                new ObjectParameter("requestTypeID", requestTypeID) :
                new ObjectParameter("requestTypeID", typeof(int));
    
            var requestStatusIDParameter = requestStatusID.HasValue ?
                new ObjectParameter("requestStatusID", requestStatusID) :
                new ObjectParameter("requestStatusID", typeof(int));
    
            var requestCalssIDParameter = requestCalssID.HasValue ?
                new ObjectParameter("requestCalssID", requestCalssID) :
                new ObjectParameter("requestCalssID", typeof(int));
    
            var requestPriorityIDParameter = requestPriorityID.HasValue ?
                new ObjectParameter("requestPriorityID", requestPriorityID) :
                new ObjectParameter("requestPriorityID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateRequest", idParameter, requestNumberParameter, totalQuantityParameter, pDDParameter, customerIDParameter, creationDateParameter, creationUserIDParameter, approvalDateParameter, approvalUserIDParameter, receiveDateParameter, receiveUserIDParameter, rejectionDateParameter, rejectionUserIDParameter, rejectionReasonIDParameter, requestTypeIDParameter, requestStatusIDParameter, requestCalssIDParameter, requestPriorityIDParameter);
        }
    
        public virtual int UpdateRequestDetail(Nullable<int> id, Nullable<int> quantity, Nullable<int> cardTypeID, Nullable<int> requestID)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("quantity", quantity) :
                new ObjectParameter("quantity", typeof(int));
    
            var cardTypeIDParameter = cardTypeID.HasValue ?
                new ObjectParameter("cardTypeID", cardTypeID) :
                new ObjectParameter("cardTypeID", typeof(int));
    
            var requestIDParameter = requestID.HasValue ?
                new ObjectParameter("requestID", requestID) :
                new ObjectParameter("requestID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateRequestDetail", idParameter, quantityParameter, cardTypeIDParameter, requestIDParameter);
        }
    }
}
